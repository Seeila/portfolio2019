{"version":3,"sources":["webpack:///./src/components/icons/ArrowLink.js","webpack:///./src/components/img/ImgWithBg.style.js","webpack:///./src/components/img/ImgWithBg.js","webpack:///./src/components/project/project-details/ProjectDetails.styles.js","webpack:///./src/components/project/project-details/ProjectDetails.js","webpack:///./src/routes/ProjectDetailsRoute.js"],"names":["ArrowLink","props","viewBox","xmlns","className","transform","d","fill","color","prototype","colors","PropTypes","object","isRequired","ImgContainer","styled","div","theme","primary","Img","img","imgSrc","string","imgAlt","ImgBg","src","alt","Main","main","p","container","bp","desktops","ProjectTitle","Title","CatTitle","h3","font","poppins","CatDescription","ListItem","li","Link","a","Arrow","RightSection","section","ProjectDetails","project","console","log","primaryLight","title","name","year","client","technologies","map","tech","index","length","challenges","challenge","key","href","url","target","rel","photos","ProjectDetailsRoute","id","match","params","useState","projectInfos","setProjectInfos","isLoading","setLoadingStatus","useEffect","ProjectDatas","find","obj","getProjectDetails"],"mappings":"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","file":"3.bundle.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//The component needs to be written inline\r\n//without the use of SVGR loader to keep the dynamic changes of colors\r\n\r\nconst ArrowLink = (props) => {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 13 13\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={props.className}\r\n    >\r\n      <g transform=\"matrix(1,0,0,1,-141.207,-5226.83)\">\r\n        <g transform=\"matrix(1,0,0,2.9122,-6119.92,4622.49)\">\r\n          <g transform=\"matrix(1,0,0,0.343383,6119.92,-1587.29)\">\r\n            <path\r\n              d=\"M149.672,5234.29L142.274,5234.29C141.685,5234.29 141.207,5233.81 141.207,5233.22L141.207,5233.04C141.207,5232.45 141.685,5231.97 142.274,5231.97L149.735,5231.97L146.088,5228.85C145.641,5228.47 145.589,5227.79 145.971,5227.35L146.092,5227.2C146.475,5226.76 147.149,5226.7 147.596,5227.09L153.325,5231.99C153.458,5232.05 153.58,5232.14 153.681,5232.26L153.802,5232.4C153.976,5232.61 154.06,5232.86 154.058,5233.1C154.06,5233.35 153.976,5233.6 153.802,5233.8L153.681,5233.94C153.58,5234.06 153.458,5234.15 153.325,5234.22L147.596,5239.12C147.149,5239.5 146.475,5239.45 146.092,5239L145.971,5238.86C145.589,5238.41 145.641,5237.74 146.088,5237.36L149.672,5234.29Z\"\r\n              fill={props.color}\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nArrowLink.prototype = {\r\n  colors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ArrowLink;\r\n","import styled from \"styled-components\";\r\n\r\nconst ImgContainer = styled.div`\r\n  width: calc(100% - 1.25rem);\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    width: calc(100%);\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 1.25rem;\r\n    left: 1.25rem;\r\n    background: ${(props) => props.theme.color.primary};\r\n    transition: all 0.25s ease-in-out;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport { Img, ImgContainer };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Img, ImgContainer } from \"./ImgWithBg.style\";\r\n\r\nconst ImgBg = (props) => {\r\n  return (\r\n    <ImgContainer className={props.className}>\r\n      <Img src={props.imgSrc} alt={props.imgAlt} />\r\n    </ImgContainer>\r\n  );\r\n};\r\n\r\nImg.prototype = {\r\n  imgSrc: PropTypes.string.isRequired,\r\n  imgAlt: PropTypes.string,\r\n};\r\n\r\nexport default ImgBg;\r\n","import styled from \"styled-components\";\r\nimport Title from \"../../text/Title\";\r\nimport ArrowLink from \"../../icons/ArrowLink\";\r\nimport ImgBg from \"../../img/ImgWithBg\";\r\n\r\nconst Main = styled.main`\r\n  width: 100%;\r\n  max-width: ${(p) => p.theme.container};\r\n  margin: 5rem auto;\r\n  padding: 0 1rem;\r\n  @media (min-width: ${(p) => `${p.theme.bp.desktops}px`}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst ProjectTitle = styled(Title)`\r\n  margin: 0 0 0.5rem;\r\n  padding: 0.5rem 0.25rem;\r\n  line-height: 0.8;\r\n`;\r\n\r\nconst CatTitle = styled.h3`\r\n  margin-top: 1.5rem;\r\n  font-family: ${(p) => p.theme.font.poppins};\r\n  font-size: 1.125rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst CatDescription = styled.p`\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  margin-top: 1.5rem;\r\n  display: inline-block;\r\n  color: ${(p) => p.theme.color.primary};\r\n`;\r\n\r\nconst Arrow = styled(ArrowLink)`\r\n  width: 0.75rem;\r\n  margin-left: 0.75rem;\r\n  transform: translateX(0);\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${Link}:hover & {\r\n    transform: translateX(50%);\r\n  }\r\n`;\r\n\r\nconst Img = styled(ImgBg)`\r\n  width: 100%;\r\n  padding: 0;\r\n`;\r\n\r\nconst RightSection = styled.section`\r\n  margin-top: 2.65rem;\r\n`;\r\n\r\nexport {\r\n  Main,\r\n  ProjectTitle,\r\n  CatTitle,\r\n  CatDescription,\r\n  ListItem,\r\n  Link,\r\n  Arrow,\r\n  Img,\r\n  RightSection,\r\n};\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  Main,\r\n  ProjectTitle,\r\n  CatTitle,\r\n  CatDescription,\r\n  ListItem,\r\n  Link,\r\n  Arrow,\r\n  Img,\r\n  RightSection,\r\n} from \"./ProjectDetails.styles\";\r\n\r\nconst ProjectDetails = ({ project }) => {\r\n  console.log(project);\r\n  const theme = {\r\n    color: {\r\n      primary: project.colors.primary,\r\n      primaryLight: project.colors.primaryLight,\r\n    },\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Main>\r\n        <section>\r\n          <ProjectTitle title={project.name} />\r\n\r\n          <CatTitle>Year :</CatTitle>\r\n          <CatDescription>{project.year}</CatDescription>\r\n\r\n          <CatTitle>Client :</CatTitle>\r\n          <CatDescription>{project.client}</CatDescription>\r\n\r\n          <CatTitle>Technologies :</CatTitle>\r\n          <CatDescription>\r\n            {project.technologies.map((tech, index) => {\r\n              return index == project.technologies.length - 1\r\n                ? tech\r\n                : `${tech}, `;\r\n            })}\r\n          </CatDescription>\r\n\r\n          <CatTitle>Challenges :</CatTitle>\r\n          <ul>\r\n            {\" \"}\r\n            {project.challenges.map((challenge, index) => (\r\n              <ListItem key={`challenge-${index}`}>{challenge}</ListItem>\r\n            ))}\r\n          </ul>\r\n          <Link href={project.url} target=\"_blank\" rel=\"noreferrer\">\r\n            {`Visit ${project.name}'s website`}{\" \"}\r\n            <Arrow color={project.colors.primary} />\r\n          </Link>\r\n        </section>\r\n        <RightSection>\r\n          <Img\r\n            imgSrc={\r\n              process.env.NODE_ENV === \"development\"\r\n                ? `src/assets/${project.photos.project[0]}`\r\n                : ` ${project.photos.project[0]}`\r\n            }\r\n            imgAlt=\"\"\r\n          />\r\n        </RightSection>\r\n      </Main>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ProjectDetails from \"../components/project/project-details/ProjectDetails\";\r\nimport ProjectDatas from \"../assets/projectsData.json\";\r\n\r\nconst ProjectDetailsRoute = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const [projectInfos, setProjectInfos] = useState(null);\r\n  const [isLoading, setLoadingStatus] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getProjectDetails() {\r\n      const project = ProjectDatas.find((obj) => obj.id == id);\r\n\r\n      await setProjectInfos(project || {});\r\n\r\n      setLoadingStatus(false);\r\n    }\r\n\r\n    getProjectDetails();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n\r\n  return <ProjectDetails project={projectInfos} />;\r\n};\r\n\r\nexport default ProjectDetailsRoute;\r\n"],"sourceRoot":""}