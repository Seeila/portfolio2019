{"version":3,"sources":["webpack:///./src/components/project/project-details/ProjectDetails.styles.js","webpack:///./src/components/project/project-details/ProjectDetails.js","webpack:///./src/routes/ProjectDetailsRoute.js"],"names":["Main","styled","main","p","theme","container","bp","desktops","ProjectTitle","Title","ProjectCategoryTitle","h3","font","poppins","ProjectDetails","project","color","primary","colors","primaryLight","title","name","year","client","technologies","map","tech","index","length","challenges","challenge","key","href","url","target","rel","ProjectDetailsRoute","id","match","params","useState","projectInfos","setProjectInfos","isLoading","setLoadingStatus","useEffect","a","ProjectDatas","find","obj","getProjectDetails"],"mappings":"qLAGMA,EAAOC,IAAOC,KAAV,sDAAGD,CAAH,+FAEK,SAACE,GAAD,OAAOA,EAAEC,MAAMC,aAGP,SAACF,GAAD,gBAAUA,EAAEC,MAAME,GAAGC,SAArB,SAKjBC,EAAeP,YAAOQ,KAAV,8DAAGR,CAAH,8BAIZS,EAAuBT,IAAOU,GAAV,sEAAGV,CAAH,2EAET,SAACE,GAAD,OAAOA,EAAEC,MAAMQ,KAAKC,WCiCtBC,EA5CQ,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAClBX,EAAQ,CACZY,MAAO,CACLC,QAASF,EAAQG,OAAOD,QACxBE,aAAcJ,EAAQG,OAAOC,eAGjC,OACE,kBAAC,IAAD,CAAef,MAAOA,GACpB,kBAACJ,EAAD,KACE,iCACE,kBAACQ,EAAD,CAAcY,MAAOL,EAAQM,OAE7B,kBAACX,EAAD,aACA,2BAAIK,EAAQO,MAEZ,kBAACZ,EAAD,eACA,2BAAIK,EAAQQ,QAEZ,kBAACb,EAAD,qBACA,2BACGK,EAAQS,aAAaC,KAAI,SAACC,EAAMC,GAC/B,OAAOA,GAASZ,EAAQS,aAAaI,OAAS,EAC1CF,EADG,UAEAA,EAFA,UAMX,kBAAChB,EAAD,mBACA,4BACG,IACAK,EAAQc,WAAWJ,KAAI,SAACK,EAAWH,GAAZ,OACtB,wBAAII,IAAG,oBAAeJ,IAAUG,OAGpC,uBAAGE,KAAMjB,EAAQkB,IAAKC,OAAO,SAASC,IAAI,cAA1C,gBACYpB,EAAQM,KADpB,mB,QCZKe,UA3Ba,SAAC,GAIvB,IAFQC,EAER,EAHJC,MACEC,OAAUF,GAER,EACoCG,mBAAS,MAD7C,WACGC,EADH,KACiBC,EADjB,OAEkCF,oBAAS,GAF3C,WAEGG,EAFH,KAEcC,EAFd,KAgBJ,OAZAC,qBAAU,WAAM,oCACd,4BAAAC,EAAA,6DACQ/B,EAAUgC,EAAaC,MAAK,SAACC,GAAD,OAASA,EAAIZ,IAAMA,KADvD,SAGQK,EAAgB3B,GAAW,IAHnC,OAKE6B,GAAiB,GALnB,4CADc,0DASdM,KACC,CAACb,IAEAM,EACK,uCAGF,kBAAC,EAAD,CAAgB5B,QAAS0B","file":"3.bundle.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Title from \"../../text/Title\";\r\n\r\nconst Main = styled.main`\r\n  width: 100%;\r\n  max-width: ${(p) => p.theme.container};\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n  @media (min-width: ${(p) => `${p.theme.bp.desktops}px`}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst ProjectTitle = styled(Title)`\r\n  margin: 3.75rem 0 0.5rem;\r\n`;\r\n\r\nconst ProjectCategoryTitle = styled.h3`\r\n  margin-top: 1.5rem;\r\n  font-family: ${(p) => p.theme.font.poppins};\r\n  font-size: 1.125rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport { Main, ProjectTitle, ProjectCategoryTitle };\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  Main,\r\n  ProjectTitle,\r\n  ProjectCategoryTitle,\r\n} from \"./ProjectDetails.styles\";\r\n\r\nconst ProjectDetails = ({ project }) => {\r\n  const theme = {\r\n    color: {\r\n      primary: project.colors.primary,\r\n      primaryLight: project.colors.primaryLight,\r\n    },\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Main>\r\n        <section>\r\n          <ProjectTitle title={project.name} />\r\n\r\n          <ProjectCategoryTitle>Year</ProjectCategoryTitle>\r\n          <p>{project.year}</p>\r\n\r\n          <ProjectCategoryTitle>Client</ProjectCategoryTitle>\r\n          <p>{project.client}</p>\r\n\r\n          <ProjectCategoryTitle>Technologies</ProjectCategoryTitle>\r\n          <p>\r\n            {project.technologies.map((tech, index) => {\r\n              return index == project.technologies.length - 1\r\n                ? tech\r\n                : `${tech}, `;\r\n            })}\r\n          </p>\r\n\r\n          <ProjectCategoryTitle>Challenges</ProjectCategoryTitle>\r\n          <ul>\r\n            {\" \"}\r\n            {project.challenges.map((challenge, index) => (\r\n              <li key={`challenge-${index}`}>{challenge}</li>\r\n            ))}\r\n          </ul>\r\n          <a href={project.url} target=\"_blank\" rel=\"noreferrer\">\r\n            {`Visit ${project.name}'s website`}\r\n          </a>\r\n        </section>\r\n      </Main>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ProjectDetails from \"../components/project/project-details/ProjectDetails\";\r\nimport ProjectDatas from \"../assets/projectsData.json\";\r\n\r\nconst ProjectDetailsRoute = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const [projectInfos, setProjectInfos] = useState(null);\r\n  const [isLoading, setLoadingStatus] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getProjectDetails() {\r\n      const project = ProjectDatas.find((obj) => obj.id == id);\r\n\r\n      await setProjectInfos(project || {});\r\n\r\n      setLoadingStatus(false);\r\n    }\r\n\r\n    getProjectDetails();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n\r\n  return <ProjectDetails project={projectInfos} />;\r\n};\r\n\r\nexport default ProjectDetailsRoute;\r\n"],"sourceRoot":""}